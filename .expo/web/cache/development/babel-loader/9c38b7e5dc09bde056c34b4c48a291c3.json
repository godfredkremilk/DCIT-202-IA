{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _templateObject;\n\nimport React, { useEffect, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styled from \"styled-components/native\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { primaryColor } from \"../helpers/Variables\";\nimport { updateCart } from \"../redux/actions/actions\";\n\nvar CartItems = function CartItems(_ref) {\n  var id = _ref.id,\n      title = _ref.title,\n      image = _ref.image,\n      price = _ref.price,\n      quant = _ref.quant;\n  var dispatch = useDispatch();\n\n  var _useState = useState(quant),\n      _useState2 = _slicedToArray(_useState, 2),\n      quantity = _useState2[0],\n      setQuantity = _useState2[1];\n\n  var _useState3 = useState(price),\n      _useState4 = _slicedToArray(_useState3, 2),\n      itemPrice = _useState4[0],\n      setItemPrice = _useState4[1];\n\n  var cart = useSelector(function (state) {\n    return state.cart;\n  });\n\n  var changeQuantity = function changeQuantity(type) {\n    type === \"add\" ? setQuantity(quantity + 1) : quantity === 1 ? dispatch(updateCart(cart.filter(function (cartItem) {\n      return cartItem.id !== id;\n    }))) : setQuantity(quantity - 1);\n  };\n\n  useEffect(function () {\n    setItemPrice(price * quantity);\n    cart.map(function (car) {\n      if (car.id === id) {\n        car.quantity = quantity;\n      }\n    });\n  }, [quantity]);\n  return React.createElement(StyledCartItem, null, React.createElement(View, {\n    style: {\n      flexBasis: \"30%\"\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: \"100%\",\n      height: 70\n    },\n    source: {\n      uri: image\n    }\n  })), React.createElement(View, {\n    style: {\n      flexBasis: \"60%\"\n    }\n  }, React.createElement(View, {\n    style: {\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      fontFamily: \"Zen-Regular\",\n      color: \"\" + primaryColor\n    }\n  }, title)), React.createElement(View, {\n    style: {\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"left\",\n      fontFamily: \"Zen-Regular\",\n      color: \"\" + primaryColor,\n      fontWeight: \"bold\",\n      fontSize: 18\n    }\n  }, \"$ \", itemPrice))), React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"space-evenly\",\n      alignItems: \"center\"\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return changeQuantity(\"sub\");\n    },\n    style: {\n      backgroundColor: \"#f0f0f0\",\n      borderRadius: 50,\n      padding: 1\n    }\n  }, React.createElement(Feather, {\n    name: \"minus\",\n    size: 18,\n    color: \"black\"\n  })), React.createElement(Text, null, quantity), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return changeQuantity(\"add\");\n    },\n    style: {\n      backgroundColor: \"#f0f0f0\",\n      borderRadius: 50,\n      padding: 1\n    }\n  }, React.createElement(Feather, {\n    name: \"plus\",\n    size: 18,\n    color: \"black\"\n  }))));\n};\n\nvar StyledCartItem = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  flex-direction: row;\\n  background-color: #fff;\\n  margin: 10px;\\n  border-radius: 20px;\\n  padding: 15px;\\n\"])));\nexport default CartItems;","map":{"version":3,"sources":["C:/Users/USER/OneDrive/Desktop/Kremilk/ecommerceShop-master/app/components/CartItems.js"],"names":["React","useEffect","useState","styled","useSelector","useDispatch","Feather","primaryColor","updateCart","CartItems","id","title","image","price","quant","dispatch","quantity","setQuantity","itemPrice","setItemPrice","cart","state","changeQuantity","type","filter","cartItem","map","car","flexBasis","width","height","uri","justifyContent","alignItems","textAlign","fontFamily","color","fontWeight","fontSize","flex","backgroundColor","borderRadius","padding","StyledCartItem","View"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Text, View, Image, TouchableOpacity } from \"react-native\";\nimport styled from \"styled-components/native\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { Feather } from \"@expo/vector-icons\";\nimport { primaryColor } from \"../helpers/Variables\";\nimport { updateCart } from \"../redux/actions/actions\";\n\nconst CartItems = ({ id, title, image, price, quant }) => {\n  const dispatch = useDispatch();\n\n  const [quantity, setQuantity] = useState(quant);\n  const [itemPrice, setItemPrice] = useState(price);\n\n  const cart = useSelector((state) => state.cart);\n\n  const changeQuantity = (type) => {\n    type === \"add\"\n      ? setQuantity(quantity + 1)\n      : quantity === 1\n      ? dispatch(updateCart(cart.filter((cartItem) => cartItem.id !== id)))\n      : setQuantity(quantity - 1);\n  };\n\n  useEffect(() => {\n    setItemPrice(price * quantity);\n\n    cart.map((car) => {\n      if (car.id === id) {\n        car.quantity = quantity;\n      }\n    });\n  }, [quantity]);\n\n  return (\n    <StyledCartItem>\n      <View style={{ flexBasis: \"30%\" }}>\n        <Image style={{ width: \"100%\", height: 70 }} source={{ uri: image }} />\n      </View>\n      <View style={{ flexBasis: \"60%\" }}>\n        <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n          <Text\n            style={{\n              textAlign: \"center\",\n              fontFamily: \"Zen-Regular\",\n              color: `${primaryColor}`,\n            }}\n          >\n            {title}\n          </Text>\n        </View>\n        <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n          <Text\n            style={{\n              textAlign: \"left\",\n              fontFamily: \"Zen-Regular\",\n              color: `${primaryColor}`,\n              fontWeight: \"bold\",\n              fontSize: 18,\n            }}\n          >\n            $ {itemPrice}\n          </Text>\n        </View>\n      </View>\n      <View\n        style={{\n          flex: 1,\n          justifyContent: \"space-evenly\",\n          alignItems: \"center\",\n        }}\n      >\n        <TouchableOpacity\n          onPress={() => changeQuantity(\"sub\")}\n          style={{ backgroundColor: \"#f0f0f0\", borderRadius: 50, padding: 1 }}\n        >\n          <Feather name=\"minus\" size={18} color=\"black\" />\n        </TouchableOpacity>\n        <Text>{quantity}</Text>\n        <TouchableOpacity\n          onPress={() => changeQuantity(\"add\")}\n          style={{ backgroundColor: \"#f0f0f0\", borderRadius: 50, padding: 1 }}\n        >\n          <Feather name=\"plus\" size={18} color=\"black\" />\n        </TouchableOpacity>\n      </View>\n    </StyledCartItem>\n  );\n};\n\nconst StyledCartItem = styled.View`\n  flex-direction: row;\n  background-color: #fff;\n  margin: 10px;\n  border-radius: 20px;\n  padding: 15px;\n`;\n\nexport default CartItems;\n"]},"metadata":{},"sourceType":"module"}